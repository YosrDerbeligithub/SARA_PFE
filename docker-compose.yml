services:
  db:
    image: postgres:16-alpine 
    platform: linux/amd64 
    container_name: sara-db
    environment:
      POSTGRES_PASSWORD: melik1234
      POSTGRES_USER: postgres
      POSTGRES_DB: sara
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"


    command: 
      -c listen_addresses='*'
      -c port=5432
      -c password_encryption=scram-sha-256
      -c ssl=off
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sara"]
      interval: 5s
      timeout: 10s
      retries: 10
     

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: hajlawimelik@gmail.com
      PGADMIN_DEFAULT_PASSWORD: melik1234
    ports:
      - "8089:80"
    depends_on:
      db:
        condition: service_healthy
      sara-cache:
        condition: service_healthy
    networks:
      - mynetwork
   

  springboot:
  
    build: ./springboot/sara
    container_name: springboot-app
    ports:
      - "8081:8081"
    environment:
      - HISTORICAL_PROCESSING_URL=http://historical-processing-ms:5000
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/sara?sslmode=disable
      - ENCRYPTION_MASTER_KEY=H8Usu2yRC2V+AiqVSrZnYSwUOWpWATmlMlqdfzu+rI4=
      - SPRING_REDIS_HOST=sara-cache
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=melik1234
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=melik1234
      - SPRING_DEVTOOLS_REMOTE_SECRET=melik1234
      - APP_JWT_SECRET=FpBbEwbtgaBmYZV-iKHilvzUfnr6-pHg_cM81C70i2BxB9nriGtHQSiE8-OIGYY7gptNffdjgz56HxeHk_TGFQ
      - APP_JWT_ACCESSEXPIRATIONMS=900000
      - APP_JWT_REFRESHEXPIRATIONDAYS=7
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mynetwork
    platform: linux/amd64 

  historical_processing:
    build: ./python-ms/historical_processing
    platform: linux/amd64
    container_name: historical-processing-ms
    ports:
      - "5001:5000"
    volumes:
      - ./python-ms/historical_processing:/app:rw
    command: uvicorn main:app --host 0.0.0.0 --port 5000 --reload --log-level debug
    depends_on:
      db:
        condition: service_healthy
      sara-cache:  # ‚Üê ADD THIS
        condition: service_healthy
    networks:
      - mynetwork
    healthcheck:  # Added
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - LOG_LEVEL=DEBUG
      - REDIS_DB=0  
      - SENSE_API_BASE=https://teamapps.u-aizu.ac.jp/sense

  realtime-monitoring:
    build: ./python-ms/realtime_monitoring
    container_name: realtime-monitoring-ms
    ports:
      - "8002:8002"
    volumes:
      - ./python-ms/realtime_monitoring/app:/app/app
      - ./python-ms/realtime_monitoring/requirements.txt:/app/requirements.txt
    command: uvicorn app.main:app --host 0.0.0.0 --port 8002
    networks:
      - mynetwork
    platform: linux/amd64 
  angular:
    build: ./angular/SmartResearchAssistant
    container_name: angular-app
    ports:
      - "4200:4200"
    volumes:
      - ./angular/SmartResearchAssistant:/app:rw
      - /app/node_modules
      - npm-cache:/root/.npm
    command: ng serve --host 0.0.0.0 --port 4200 --poll=2000 --disable-host-check
    depends_on:
      - springboot
    networks:
      - mynetwork
    platform: linux/amd64 
  sara-cache:
    image: redis:7-alpine
    platform: linux/amd64 
    container_name: sara-redis
    environment:
      REDIS_PASSWORD: melik1234
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - sara_redis_data:/data
    command: 
      - redis-server
      - --bind 0.0.0.0
      - --requirepass melik1234
      - --maxmemory 1GB
      - --maxmemory-policy allkeys-lru
      - --appendonly yes
      - --save 900 1
      - --save 300 10
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "melik1234", "--no-auth-warning", "ping"]
      start_period: 30s
      interval: 5s
      timeout: 5s
      retries: 5


  redis-insight:
    image: redis/redisinsight:2.48.0
    container_name: redis-insight
    ports:
      - "8001:8001"
    volumes:
      - redisinsight_data:/db
    environment:
      RI_HOST: 0.0.0.0  # Force IPv4 binding
    depends_on:
      sara-cache:
        condition: service_healthy
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001"]
      interval: 10s
      timeout: 5s
      retries: 5
    platform: linux/amd64 
volumes:
  db_data:
  sara_redis_data:
  redisinsight_data:
  npm-cache: {}
networks:
  mynetwork:
    driver: bridge
